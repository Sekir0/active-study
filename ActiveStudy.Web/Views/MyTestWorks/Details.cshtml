@using ActiveStudy.Domain.Materials.TestWorks.Questions.SingleAnswer
@using ActiveStudy.Domain.Materials.TestWorks.Questions.MultiAnswer
@using ActiveStudy.Domain.Materials.TestWorks.Results
@model ActiveStudy.Web.Models.MyTestWorks.MyTestWorkDetailsViewModel

@{
    ViewData["Title"] = Model.TestWork.Title;
}

<h2>@Model.TestWork.Title</h2>
<p>@Model.TestWork.Description</p>

@foreach (var (id, questions) in Model.TestWork.Variants)
{
    <fieldset>
        <legend>Variant @id</legend>
        @foreach (var question in questions)
        {
            @if (question is SingleAnswerQuestion singleAnswerQuestion)
            {
                <fieldset>
                    <legend>@question.Text</legend>
                    <ul>
                        @foreach (var option in singleAnswerQuestion.Options)
                        {
                            <li>@(option.Id == singleAnswerQuestion.CorrectAnswerId ? '✅' : '❌') @option.Text</li>
                        }
                    </ul>
                </fieldset>
            }
            else if (question is MultiAnswerQuestion multiAnswerQuestion)
            {
                <fieldset>
                    <legend>@question.Text</legend>
                    <ul>
                        @foreach (var option in multiAnswerQuestion.Options)
                        {
                            <li>@(option.IsCorrect ? '✅' : '❌') @option.Text</li>
                        }
                    </ul>
                </fieldset>
            }
        }
    </fieldset>
}

<h3>Results</h3>
<ul>
    @foreach (var result in Model.Results)
    {
        <li>
            <h4>@result.Author.FirstName @result.Author.LastName (@result.Author.Email)</h4>
            <p>Total score: @result.TotalScore/@result.MaxScore</p>
            <ul>
                @foreach (var answer in result.Answers)
                {
                    switch (answer)
                    {
                        case TestWorkSingleQuestionResult singleQuestionResult:
                        {
                            <li>
                                <p>@answer.Question.Text</p>
                                <p>@answer.Scored/@answer.MaxScore</p>
                                <ul>
                                    @foreach (var option in singleQuestionResult.TypedQuestion.Options)
                                    {
                                        <li>
                                            @if (option.Id == singleQuestionResult.OptionId)
                                            {
                                                @(option.Id == singleQuestionResult.TypedQuestion.CorrectAnswerId ? '✅' : '❌') @option.Text
                                            }
                                            else
                                            {
                                                @option.Text
                                            }
                                        </li>
                                    }
                                </ul>
                            </li>
                            break;
                        }
                        case TestWorkMultiQuestionResult multiQuestionResult:
                        {
                            <li>
                                <p>@answer.Question.Text</p>
                                <p>@answer.Scored/@answer.MaxScore</p>
                                <ul>
                                        @foreach (var option in multiQuestionResult.TypedQuestion.Options)
                                        {
                                            <li>
                                                @if (multiQuestionResult.OptionIds.Contains(option.Id))
                                                {
                                                    @(multiQuestionResult.TypedQuestion.Options.Any(o => o.Id == option.Id && o.IsCorrect)  ? '✅' : '❌') @option.Text
                                                }
                                                else
                                                {
                                                    @option.Text
                                                }
                                            </li>
                                        }
                                </ul>
                            </li>
                            break;
                        }
                    }
                }
            </ul>
        </li>
    }
</ul>